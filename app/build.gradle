plugins {
    id 'com.android.application'
}

android {
    signingConfigs {
        release {
            storeFile file('release.keystore')
            storePassword '123456'
            keyAlias 'key0'
            keyPassword '123456'
        }
    }
    compileSdk 32
    defaultConfig {
        applicationId "com.dlh.movieutils"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    // 自定义打包名称
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "看片助手_${buildType.name}_v${versionName}_${generateTime()}.apk"
        }
    }
    buildTypes {
        release {
            minifyEnabled false//是否启动混淆 ture:打开   false:关闭
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false//是否启动混淆 ture:打开   false:关闭
            shrinkResources false
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
}
//构建时间
def generateTime() {
    return new Date().format("yyyy_MM_dd_HH_mm_ss")
}
dependencies {
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
    implementation 'com.google.android.material:material:1.4.0'

    //纯 java 项目添加此
    configurations {
        all {
            exclude group: 'androidx.lifecycle', module: 'lifecycle-viewmodel-ktx'
        }
    }

    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

//    https://github.com/li-xiaojun/XPopup
    implementation 'com.github.li-xiaojun:XPopup:2.8.10'
    implementation 'com.github.li-xiaojun:EasyAdapter:1.2.5'
    implementation 'com.github.li-xiaojun:StateLayout:1.2.8'
    //    https://github.com/Justson/AgentWeb
    implementation 'com.github.Justson.AgentWeb:agentweb-core:v4.1.9-androidx' // (必选)
//    implementation 'com.github.Justson.AgentWeb:agentweb-filechooser:v5.0.0-alpha.1-androidx' // (可选)
//    implementation 'com.github.Justson:Downloader:v5.0.0-androidx' // (可选)
    implementation project(path: ':dlhlibrary')

    //    https://github.com/scwang90/SmartRefreshLayout
    def refresh_version = "2.0.5"
    implementation "io.github.scwang90:refresh-layout-kernel:$refresh_version"      //核心必须依赖
    implementation "io.github.scwang90:refresh-header-classics:$refresh_version"  //经典刷新头
//    api  "io.github.scwang90:refresh-header-radar:$refresh_version"      //雷达刷新头
//    api  "io.github.scwang90:refresh-header-falsify:$refresh_version"    //虚拟刷新头
    implementation "io.github.scwang90:refresh-header-material:$refresh_version"   //谷歌刷新头
//    api  "io.github.scwang90:refresh-header-two-level:$refresh_version"   //二级刷新头
//    api  "io.github.scwang90:refresh-footer-ball:$refresh_version"      //球脉冲加载
    implementation "io.github.scwang90:refresh-footer-classics:$refresh_version"   //经典加载

//    https://github.com/bumptech/glide
    def glide_version = "4.13.2"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

}